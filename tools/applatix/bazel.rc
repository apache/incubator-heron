# This is from Bazel's former travis setup, to avoid blowing up the RAM usage.
startup --host_jvm_args=-Xmx2500m
startup --host_jvm_args=-Xms2500m
startup --batch
test --ram_utilization_factor=10
test --test_output=errors

# This is so we understand failures better
build --verbose_failures

build --show_timestamps
test --show_timestamps

# Limits the jobs to 25 since the resources are limited
build --jobs 25

# Link with the appropriate libs
build --linkopt -lm
build --linkopt -lpthread
build --linkopt -lrt
build --experimental_action_listener=tools/cpp:compile_cpp
build --experimental_action_listener=tools/java:compile_java
build --experimental_action_listener=tools/python:compile_python
build --workspace_status_command scripts/release/status.sh

# This is so we use a recent enough GCC when building.
# build --crosstool_top //tools/applatix/toolchain:CROSSTOOL

# This is so we don't use sandboxed execution. Sandboxed execution
# runs stuff in a container, and since Applatix already runs its script
# in a container this fails to run tests.
build --spawn_strategy=standalone --genrule_strategy=standalone
test --test_strategy=standalone

# Ignore unsupported warning for sandboxing
build --ignore_unsupported_sandboxing

# Below this line, .travis.yml will cat the default bazelrc.
# This is needed so Bazel starts with the base workspace in its
# package path.
