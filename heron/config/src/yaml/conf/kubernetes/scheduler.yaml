#  Licensed to the Apache Software Foundation (ASF) under one
#  or more contributor license agreements.  See the NOTICE file
#  distributed with this work for additional information
#  regarding copyright ownership.  The ASF licenses this file
#  to you under the Apache License, Version 2.0 (the
#  "License"); you may not use this file except in compliance
#  with the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing,
#  software distributed under the License is distributed on an
#  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
#  KIND, either express or implied.  See the License for the
#  specific language governing permissions and limitations
#  under the License.

# scheduler class for distributing the topology for execution
heron.class.scheduler:                       org.apache.heron.scheduler.kubernetes.KubernetesScheduler

# launcher class for submitting and launching the topology
heron.class.launcher:                        org.apache.heron.scheduler.kubernetes.KubernetesLauncher

# location of java - pick it up from shell environment
heron.directory.sandbox.java.home:          $JAVA_HOME

# The URI of kubernetes API
heron.kubernetes.scheduler.uri:             <kubernetes_api_addr>

# Invoke the IScheduler as a library directly
heron.scheduler.is.service:                  False

# docker repo for executor
heron.executor.docker.image:                'heron/heron:latest'

# logic to be used for calculating the Kubernetes resource request and limits
# value can be "NOT_SET", "EQUAL_TO_LIMIT"
# "NOT_SET" will not set a K8s request
# "EQUAL_TO_LIMIT" will set the K8s request to the same values as the K8s limit
heron.kubernetes.resource.request.mode:  EQUAL_TO_LIMIT
